version: "3.8"
services:
  connector-1:
    container_name: connector-1
    build:
      context: EDC-Blockchain-Catalog
      dockerfile: Dockerfile_consumer
    volumes:
      - ./:/open-telemetry
    ports:
      - "8181:8181"
      - "8182:8182"
      - "8282:8282"
      - "8183:8183"
      - "8184:8184"
      - "8185:8185"
    environment:
      OTEL_SERVICE_NAME: connector-1
      OTEL_TRACES_EXPORTER: jaeger
      OTEL_JAVAAGENT_EXTENSIONS: opentelemetry-exporter-jaeger.jar
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14250
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_METRICS_EXPORTER: prometheus
      OTEL_EXPORTER_OTLP_METRICS_ENDPOINT: http://prometheus:9090
      OTEL_LOGS_EXPORTER: none
      OTEL_INSTRUMENTATION_COMMON_EXPERIMENTAL_CONTROLLER_TELEMETRY_ENABLED: true
      EDC_BLOCKCHAIN_INTERFACE_URL: "http://edc-interface-1:3000"
      IDS_WEBHOOK_ADDRESS: "http://connector-1:8282"
      WEB_HTTP_PORT: "8181"
      WEB_HTTP_PATH: "/api"
      WEB_HTTP_PROTOCOL_PORT: 8184
      WEB_HTTP_PROTOCOL_PATH: "/protocol"
      WEB_HTTP_MANAGEMENT_PORT: "8182"
      WEB_HTTP_MANAGEMENT_PATH: "/management"
      WEB_HTTP_CONTROL_PORT: 8183
      WEB_HTTP_CONTROL_PATH: "/control"
      WEB_HTTP_PUBLIC_PORT: 8185
      WEB_HTTP_PUBLIC_PATH: "/public"
      EDC_API_AUTH_KEY: "password"
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "*"
      EDC_WEB_REST_CORS_ORIGINS: "*"
      EDC_WEB_REST_CORS_METHODS: "GET, POST, DELETE, PUT, OPTIONS"
      EDC_RECEIVER_HTTP_ENDPOINT: "http://http-push-backend-services:4000/receiver/urn:connector:provider/callback"
      EDC_DATAPLACE_TOKEN_VALIDATION_ENDPOINT: "http://connector-1:8183/control/token"
      EDC_HOSTNAME: "connector-1"
      EDC_DSP_CALLBACK_ADDRESS: "http://connector-1:8184/protocol"
    entrypoint: java
      -javaagent:/opentelemetry-javaagent.jar
      -Djava.util.logging.config.file=/open-telemetry/resources/logging.properties
      -Dedc.fs.config=config.properties
      -Dedc.keystore=cert.pfx
      -Dedc.keystore.password=123456
      -Dedc.vault=vault.properties
      -jar app.jar
  edc-interface-1:
    container_name: edc-interface-1
    build:
      context: EDC-Blockchain-Interface
      dockerfile: Dockerfile
    #image: julianlegler/edc_blockchain_interface:0.2.2
    ports:
      - "3000:3000"
    environment:
      PINATA_KEY: "${PINATA_KEY}"
      OTEL_TRACES_EXPORTER: otlp 
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:4318/v1/traces
      NODE_OPTIONS: "--require @opentelemetry/auto-instrumentations-node/register"
      OTEL_SERVICE_NAME: edc-interface-1
      OTEL_NODE_ENABLED_INSTRUMENTATIONS: "http,express,dns,grpc"
      #demo
      #ASSET_ADDRESS: "KT1F8fKCkcseDMetbMCkmhgfZBWyQijj69aA"
      #POLICY_ADDRESS: "KT1KAbNjW3LX9Naa3koJSr6dN1YEQJ4Zwc1k"
      #CONTRACT_ADDRESS: "KT1U4tQpYzSCq7HPUTx8q5qMWMtNvqC5zJRp"
      #TRANSFER_ADDRESS: "KT1SgL6QbTTRGwp958YcdeVztgatsryS2CGb"
      #AGREEMENT_ADDRESS: "KT19dNiYWs36qB6YUUa3q747SX3YjKGK3Z4r"
      #dev
      ASSET_ADDRESS: "KT1N3iJne4jFnQz4tdHBz5q7Cd8Wmd6XtZSH"
      POLICY_ADDRESS: "KT1J7FvNLo2yQSUm7jcm2wzNHDBhR19Y5dJ9"
      CONTRACT_ADDRESS: "KT1QDheV2TkL3mitzYNKzunWYhSe6MmEPTh5"
      TRANSFER_ADDRESS: "KT18pEHAbmtGj9iYQAJNhN2CtzjBGf4zBxKX"
      AGREEMENT_ADDRESS: "KT1CHo3f2eWcnT7zCYs1KD1ERVXwEPYacj3A"
      VERIFIABLE_CREDENTIALS_ADDRESS: "KT1XgUq6rzN9q6YMh44TbLffEz3zb54HbY2H"
      TOKEN_LIMIT: 1000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # - //usr/bin/docker:/usr/bin/docker
  data-dashboard-1:
      container_name: data-dashboard-1
      build:
        context: EDC-Blockchain-Dashboard
        dockerfile: Dockerfile
      ports:
        - "5500:80"
      environment:
        COMMENT: "This file will be replaced at runtime when deployed to the cloud"
        DATA_MANAGEMENT_URL: "http://localhost:8182/management" # TODO: unsolvable CORS problems when trying to connect to connector-2:9192 instead of localhost:9192 - is it a docker network issue because it uses the address for external and docker internal requests?
        CATALOG_URL: "http://localhost:8181/api" # TODO: unsolvable CORS problems when trying to connect to connector-2:9192 instead of localhost:9192 - is it a docker network issue because it uses the address for external and docker internal requests?
        STORAGE_ACCOUNT: "company1assets"
        STORAGE_EXPLORER_LINK_TEMPLATE: "storageexplorer://v:1"
        API_KEY: "password"
        THEME: "theme-1"
        OTEL_TRACES_EXPORTER: otlp 
        OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:14250
  connector-2:
    container_name: connector-2
    build:
      context: EDC-Blockchain-Catalog
      dockerfile: Dockerfile_provider
    volumes:
      - ./:/open-telemetry
    ports:
      - "9191:9191"
      - "9192:9192"
      - "9292:9292"
      - "9193:9193"
      - "9194:9194"
      - "9195:9195"
    environment:
      OTEL_SERVICE_NAME: connector-2
      OTEL_TRACES_EXPORTER: jaeger
      OTEL_JAVAAGENT_EXTENSIONS: opentelemetry-exporter-jaeger.jar
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14250
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4318
      OTEL_LOGS_EXPORTER: none
      OTEL_INSTRUMENTATION_COMMON_EXPERIMENTAL_CONTROLLER_TELEMETRY_ENABLED: true
      EDC_BLOCKCHAIN_INTERFACE_URL: "http://edc-interface-2:3000"
      IDS_WEBHOOK_ADDRESS: "http://connector-2:9292"
      WEB_HTTP_PORT: "9191"
      WEB_HTTP_PATH: "/api"
      WEB_HTTP_PROTOCOL_PORT: 9194
      WEB_HTTP_PROTOCOL_PATH: "/protocol"
      WEB_HTTP_MANAGEMENT_PORT: "9192"
      WEB_HTTP_MANAGEMENT_PATH: "/management"
      WEB_HTTP_CONTROL_PORT: 9193
      WEB_HTTP_CONTROL_PATH: "/control"
      WEB_HTTP_PUBLIC_PORT: 9195
      WEB_HTTP_PUBLIC_PATH: "/public"
      EDC_API_AUTH_KEY: "password"
      EDC_WEB_REST_CORS_ENABLED: "true"
      EDC_WEB_REST_CORS_HEADERS: "*"
      EDC_WEB_REST_CORS_ORIGINS: "*"
      EDC_WEB_REST_CORS_METHODS: "GET, POST, DELETE, PUT, OPTIONS"
      EDC_RECEIVER_HTTP_ENDPOINT: "http://http-push-backend-services:4000/receiver/urn:connector:provider/callback"
      EDC_DATAPLACE_TOKEN_VALIDATION_ENDPOINT: "http://connector-2:9193/control/token"
      EDC_HOSTNAME: "connector-2"
      EDC_DSP_CALLBACK_ADDRESS: "http://connector-2:9194/protocol"
    entrypoint: java
      -javaagent:/opentelemetry-javaagent.jar
      -Djava.util.logging.config.file=/open-telemetry/resources/logging.properties
      -Dedc.fs.config=config.properties
      -Dedc.keystore=cert.pfx
      -Dedc.keystore.password=123456
      -Dedc.vault=vault.properties
      -jar app.jar
  edc-interface-2:
    container_name: edc-interface-2
    build:
      context: EDC-Blockchain-Interface
      dockerfile: Dockerfile
    #image: julianlegler/edc_blockchain_interface:0.2.2
    environment:
      PINATA_KEY: "${PINATA_KEY}"
      OTEL_TRACES_EXPORTER: otlp 
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:4318/v1/traces
      NODE_OPTIONS: "--require @opentelemetry/auto-instrumentations-node/register"
      OTEL_SERVICE_NAME: edc-interface-2
      OTEL_NODE_ENABLED_INSTRUMENTATIONS: "http,express,dns,grpc"
      #demo
      #ASSET_ADDRESS: "KT1F8fKCkcseDMetbMCkmhgfZBWyQijj69aA"
      #POLICY_ADDRESS: "KT1KAbNjW3LX9Naa3koJSr6dN1YEQJ4Zwc1k"
      #CONTRACT_ADDRESS: "KT1U4tQpYzSCq7HPUTx8q5qMWMtNvqC5zJRp"
      #TRANSFER_ADDRESS: "KT1SgL6QbTTRGwp958YcdeVztgatsryS2CGb"
      #AGREEMENT_ADDRESS: "KT19dNiYWs36qB6YUUa3q747SX3YjKGK3Z4r"
      #dev
      ASSET_ADDRESS: "KT1N3iJne4jFnQz4tdHBz5q7Cd8Wmd6XtZSH"
      POLICY_ADDRESS: "KT1J7FvNLo2yQSUm7jcm2wzNHDBhR19Y5dJ9"
      CONTRACT_ADDRESS: "KT1QDheV2TkL3mitzYNKzunWYhSe6MmEPTh5"
      TRANSFER_ADDRESS: "KT18pEHAbmtGj9iYQAJNhN2CtzjBGf4zBxKX"
      AGREEMENT_ADDRESS: "KT1CHo3f2eWcnT7zCYs1KD1ERVXwEPYacj3A"
      VERIFIABLE_CREDENTIALS_ADDRESS: "KT1XgUq6rzN9q6YMh44TbLffEz3zb54HbY2H"
      TOKEN_LIMIT: 1000
  data-dashboard-2:
    container_name: data-dashboard-2
    build:
      context: EDC-Blockchain-Dashboard
      dockerfile: Dockerfile
    ports:
      - "5502:80"
    environment:
      COMMENT: "This file will be replaced at runtime when deployed to the cloud"
      DATA_MANAGEMENT_URL: "http://localhost:9192/management" # TODO: unsolvable CORS problems when trying to connect to connector-2:9192 instead of localhost:9192 - is it a docker network issue because it uses the address for external and docker internal requests?
      CATALOG_URL: "http://localhost:9191/api" # TODO: unsolvable CORS problems when trying to connect to connector-2:9192 instead of localhost:9192 - is it a docker network issue because it uses the address for external and docker internal requests?
      STORAGE_ACCOUNT: "company1assets"
      STORAGE_EXPLORER_LINK_TEMPLATE: "storageexplorer://v:1"
      API_KEY: "password"
      THEME: "theme-2"
      OTEL_TRACES_EXPORTER: otlp 
      OTEL_EXPORTER_OTLP_TRACES_ENDPOINT: http://jaeger:14250
    #  azurite:
    #    container_name: azurite
    #    image: mcr.microsoft.com/azure-storage/azurite
    #    ports:
    #      - 10000:10000
    #    environment:
    #      AZURITE_ACCOUNTS: company1assets:key1;company2assets:key2;company3assets:key3
  http-push-backend-services:
    container_name: http-push-backend-services
    image: julianlegler/edc_blockchain_transfer:0.2.0
    ports:
      - "4000:4000"
    volumes:
      - ./container-data:/data
  edc_blockchain_listener:
    container_name: edc_blockchain_listener
    image: sonak53/edc_blockchain_listener:latest
  #  octez-node:
  #    container_name: octez-node-alpha
  #    image: tezos/tezos:latest
  #    hostname: octez-node
  #    command: octez-node
  #    ports:
  #      - 9732:9732
  #      - 8732:8732
  #    environment:
  #      NODE_HOST: octez-node
  #      PROTOCOL: alpha
  #    volumes:
  #      - ./node_data:/var/run/tezos/node
  #      - ./client_data:/var/run/tezos/client
  #    restart: on-failure
  jaeger:
    image: jaegertracing/all-in-one
    user: root
    ports:
      - "16686:16686"
      - "4318:4318"
    environment:
      SPAN_STORAGE_TYPE: badger
      BADGER_EPHEMERAL: false
      BADGER_DIRECTORY_VALUE: /badger/data
      BADGER_DIRECTORY_KEY: /badger/key
    volumes:
      - ./badger:/badger
  #prepare-data-dir:
  #  # Run this step as root so that we can change the directory owner.
  #  user: root
  #  image: jaegertracing/all-in-one:latest
  #  command: "mkdir -p /badger/data && touch /badger/data/.initialized && chown -R 10001:10001 /badger/data"
  #  volumes:
  #    - ./badger:/badger
  prometheus:
    image: prom/prometheus:v2.30.3
    volumes:
      - ./EDC-Blockchain-Catalog/compose/prometheus/:/etc/prometheus/
    ports:
      - "9090:9090"
